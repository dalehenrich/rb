(name 'AST-Tests-Core-dkh.22' message 'fix AST-Tests-Core test failure' id '860a05d8-0812-46dd-9319-93ff57d8e534' date '11/22/2015' time '11:12:25' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.21' message 'add last couple of test cases ... formatting looks great all tests passing' id '62c0e54f-f48c-4e23-9b1f-5a395f3e0de2' date '02/17/2013' time '08:08:43' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.20' message 'fix problem with literal predicate in query block ...' id 'ae898194-e17a-4db7-a0fe-45aec0c76e75' date '02/17/2013' time '07:57:43' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.19' message 'checkpoint ... one more query block format test passing ... still issues' id '4700fca1-8378-4b90-aa30-0cb0ec2e70dd' date '02/16/2013' time '19:39:49' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.18' message 'fixed one set of query block bugs ... one set remaining (at least) ... added test for it ...' id '56973fa0-6e6f-41e5-ae8a-650189619a82' date '02/16/2013' time '14:07:29' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.17' message 'checkpoint ... gemstone-side formatters are now in good shape ... start using them instead of the client-side formatter for topez' id '0cb1b9df-9799-4fdb-8b00-1caa506fc095' date '02/16/2013' time '12:02:58' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.16' message 'checkpoint: 81 run, 81 passes, 0 expected defects, 0 failures, 0 errors, 0 unexpected passes ... integrated work to support {} parsing, but no tests yet ... but rest of parser/formatter appears to be functional' id '0f77846f-c165-498e-af99-17d380715d5c' date '02/16/2013' time '08:59:19' author 'dkh' ancestors ((name 'AST-Tests-Core-dkh.15' message 'merge AST-Tests-Core-lr.14' id '5fd29faf-2fc1-4f2a-9b49-95461899d05e' date '02/16/2013' time '06:37:59' author 'dkh' ancestors ((name 'AST-Tests-Core-DaleHenrichs.11' message '- starting port to GemStone' id 'de871e66-5b41-467b-bba5-168d168043fa' date '08/11/2010' time '20:05:47' author 'DaleHenrichs' ancestors () stepChildren ())(name 'AST-Tests-Core-lr.14' message '- made sure that all add operations on nodes return the added node (#addNode:, #addNodes:, #addNode:before:, #addNodes:before:, #addNodeFirst:, #addNodesFirst:, #addTemporaryNamed:, #addTemporariesNamed:)- addes a test that verifies each of these operations' id '5ee5eeb2-927e-4111-8940-2b2fa4e21986' date '01/04/2012' time '22:16:29' author 'lr' ancestors ((name 'AST-Tests-Core-lr.13' message '- move some of Refactoring-Tests-Core to AST-Tests-Core' id '64f777fe-3417-413e-9eee-54abac9c3986' date '09/18/2011' time '16:01:34' author 'lr' ancestors ((name 'AST-Tests-Core-lr.12' message '- add annotation for coverage analysis' id '508202dd-d6ec-47ef-a26f-10da7b40a474' date '09/18/2011' time '15:06:51' author 'lr' ancestors ((name 'AST-Tests-Core-lr.11' message '- do not dependen on refactoring browser' id '0b853ecc-e99c-4f6f-95b2-27c82f48266d' date '09/05/2010' time '10:36:29' author 'lr' ancestors ((name 'AST-Tests-Core-lr.10' message '- simplified some tests' id '19745dbd-ca6c-43ad-9c78-64fc259808b6' date '05/26/2010' time '19:04:32' author 'lr' ancestors ((name 'AST-Tests-Core-lr.9' message '- tests that use a formatter should always use the same one' id 'd006a0f2-4ce9-46fa-a8fc-cbf192996b7f' date '03/26/2010' time '17:43:25' author 'lr' ancestors ((name 'AST-Tests-Core-lr.8' message '- improved tests for format preservation' id '576b8a30-8a64-4b7a-ac01-64d974b8ce57' date '03/07/2010' time '14:08:07' author 'lr' ancestors ((name 'AST-Tests-Core-lr.7' message '- added some tests to preserve formatting' id '4870f5cb-3604-453a-b4cd-3b316c95a0a6' date '02/21/2010' time '13:52:07' author 'lr' ancestors ((name 'AST-Tests-Core-lr.6' message '- renamed package from AST-Tests' id '44c0ce99-2205-41db-b97d-3c36a0c9a7de' date '01/22/2010' time '18:22:16' author 'lr' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())